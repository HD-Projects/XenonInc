PART
{
name = ISRU-AIR
module = Part
author = RoverDude

mesh = ISRU.mu
scale = 1
rescaleFactor = 1

node_stack_top = 0.0, 1.5, 0.0, 0.0, 1.0, 0.0, 2
node_stack_bottom = 0.0, -1.5, 0.0, 0.0, -1.0, 0.0, 2

TechRequired = advScienceTech
entryCost = 24000
cost = 8000
category = Utility
subcategory = 0
title =  Convert-O-Tron-Air
manufacturer =  Kerbodyne
description =  This mobile processing plant can create xenon gas out of thin air, well acutally it workss better in thick air but....
attachRules = 1,1,1,0,0

// --- standard part parameters ---
mass = 4.25
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 2000 // = 3500
bulkheadProfiles = size2, srf
tags =conver isru mine mining ore process resource
	MODULE
	{
		name = ModuleOverheatDisplay
	}

	


 MODULE
    {
        name = ModuleResourceConverter          //    Module Name
        ConverterName = XenonConverter           //    Converter Name (visible in Right-Click Menu)
        StartActionName = Start XenonConverter   //    Text to start conversion (visible in RCM)
        StopActionName = Stop XenonConverter     //    Text to stop conversion (visible in RCM)
        AutoShutdown = true                     //*    Heat exceeded? Related to DumpExcess?
        TemperatureModifier                     //    Float-Point Curve
        {
            key = 0 100000
            key = 750 50000
            key = 1000 10000
            key = 1250 500    
            key = 2000 50    
            key = 4000 0
        }                
        GeneratesHeat = true                  //    Part produces heat or not
        DefaultShutoffTemp = .8                 //*    80% of MaxTemp, MaxTemp=?
        ThermalEfficiency                       //    Float-Point Curve
        {
            key = 0 0 0 0
            key = 500 0.1 0 0
            key = 1000 1.0 0 0
            key = 1250 0.1 0 0
            key = 3000 0 0 0
        }
        UseSpecialistBonus = true               //    EB*[SBB+(EE*SEF)] ; EE=0-6
        SpecialistEfficiencyFactor = 0.2        //    SEF
        SpecialistBonusBase = 0.05              //    SBB
        ExperienceEffect = ConverterSkill       //    EE (NoSpecialist=0;FiveStarSpecialist=6)
        EfficiencyBonus = 1                     //    EB        
        INPUT_RESOURCE                          //    Resource to be consumed
        {
            ResourceName = IntakeAir                 //    Name of the Resource to be consumed
            Ratio = 100                         //    How much Resource is consumed per second at 100% Effic
            FlowMode = STAGE_PRIORITY_FLOW      //    Resource FlowMode (See CFG Doc for more info)
        }
        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = 20
        }
        OUTPUT_RESOURCE                         //    Resource to be produced
        {
            ResourceName = XenonGas           //    Name of the Resource to be produced
            Ratio = 0.7                      //    How much Resource is produced per second at 100% Effic
            DumpExcess = false                  //    Continue Converter if this Resource can't be stored?
            FlowMode = STAGE_PRIORITY_FLOW      //    Resource FlowMode (See CFG Doc for more info)
        }


    }

	MODULE
	{
		name = ModuleAnimationGroup
		deployAnimationName = 
		activeAnimationName = ProcessorLarge_running
		deployActionName = #autoLOC_6002380 //#autoLOC_6002380 = Deploy <<1>>
		retractActionName = #autoLOC_6002381 //#autoLOC_6002381 = Retract <<1>>
		toggleActionName = #autoLOC_6002382 //#autoLOC_6002382 = Toggle <<1>>
		moduleType = #autoLOC_7001227  //Converter //#autoLOC_7001227 = Converter
		autoDeploy = true
	}
	

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 4000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 200					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}

}
